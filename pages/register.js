import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Link from "next/link";
import { useState } from "react";
import { useRouter } from "next/router";
import axios from "axios";
import validator from "validator";
import { Button, Modal, ModalBody, ModalFooter } from "reactstrap";
import "bootstrap/dist/css/bootstrap.css";

export default function Home() {
  const [email, setEmail] = useState();
  const [pass, setPass] = useState();
  const [pass1, setPass1] = useState();
  const [tell, setTell] = useState();
  const [test, setTest] = useState(false);
  const router = useRouter();

  const [modalOpen, setModalOpen] = useState(false);
  const [modalError, setModalError] = useState("");

  const createUser = () => {
    if (pass == pass1 && email != "" && pass != "" && test == true) {
      axios.post("http://localhost:3001/addUser", {
        email: email,
        password: pass,
        phoneNumber: tell,
      });
      setEmail("");
      setPass("");
      setTell("");
      setModalOpen(!modalOpen);
      router.push({
        pathname: "/",
      });
    } else {
      setModalOpen(!modalOpen);
      setModalError("Нууц үг эсвэл Email шаардлага хангасангүй");
    }
  };
  const [errorMessage, setErrorMessage] = useState("");
  const validate = (value) => {
    if (
      validator.isStrongPassword(value, {
        minLength: 8,
        minLowercase: 1,
        minUppercase: 1,
        minNumbers: 1,
        minSymbols: 0,
      })
    ) {
      setErrorMessage("");
      setTest(true);
    } else {
      setErrorMessage("Сул нууц үг");
      setTest(false);
    }
  };
  const [emailError, setEmailError] = useState("");
  const validateEmail = (email) => {
    if (validator.isEmail(email)) {
      setTest(true);
      setEmailError("");
    } else {
      setEmailError("Бүртгэлтэй E-mail  оруулна уу");
      setTest(false);
    }
  };
  return (
    <div className={styles.main}>
      <Head>
        <title>Register</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <h1 className={styles.description}>Бүртгүүлэх</h1>
      <div className={styles.container}>
        <div className={styles.grid}>
          <div>
            <span className={styles.span}>E-mail: </span>
            <input
              type="text"
              value={email}
              onChange={(e) => {
                setEmail(e.target.value);
                validateEmail(e.target.value);
              }}
            />
            <div
              style={{
                fontWeight: "500",
                color: "red",
              }}
            >
              {emailError}
            </div>
          </div>
          <div>
            <span className={styles.span}>Утасны дугаар: </span>
            <input
              type="number"
              value={tell}
              onChange={(e) => {
                setTell(e.target.value);
              }}
            />
          </div>
          <div>
            <span className={styles.span}>Нууц үг: </span>
            <input
              type="password"
              value={pass}
              onChange={(e) => {
                validate(e.target.value);
                setPass(e.target.value);
              }}
            />
            <div>
              {errorMessage === "" ? null : (
                <div
                  style={{
                    fontWeight: "500",
                    color: "red",
                  }}
                >
                  {errorMessage}
                </div>
              )}
            </div>
          </div>
          <div>
            <span className={styles.span}>Нууц үг дахин оруулах: </span>
            <input
              type="password"
              value={pass1}
              onChange={(e) => setPass1(e.target.value)}
            />
            {/* <div className={styles.content}>{error}</div> */}
          </div>
          <div>
            <button className={styles.button} onClick={() => createUser()}>
              Бүртгүүлэх
            </button>
            <Link href="/" className={styles.btn}>
              Нэвтрэх
            </Link>
          </div>
          <Modal toggle={() => setModalOpen(!modalOpen)} isOpen={modalOpen}>
            <div className=" modal-header">
              <h5 className=" modal-title" id="exampleModalLabel">
                Анхааруулга
              </h5>
              <h5 className="">{test == false ? "Хадгалах боломжгүй" : ""}</h5>
            </div>
            <ModalBody>
              <div aria-hidden={true}>{emailError}</div>
              <div aria-hidden={true}>{errorMessage}</div>
              <div aria-hidden={true}>{modalError}</div>
            </ModalBody>
            <ModalFooter>
              <Button
                color="secondary"
                type="button"
                onClick={() => setModalOpen(!modalOpen)}
              >
                Хаах
              </Button>
            </ModalFooter>
          </Modal>
        </div>
      </div>
    </div>
  );
}
